{"version":3,"sources":["api.tsx","routes/Coins.tsx","routes/Price.tsx","routes/Chart.tsx","routes/Coin.tsx","Router.tsx","App.tsx","index.tsx","Theme.ts"],"names":["BASE_URL","fetchCoins","a","fetch","then","response","json","Container","styled","div","Header","header","CoinsList","ul","Coin","li","props","theme","bgColor","accentColor","Title","h1","Loader","span","Img","img","Coins","useQuery","isLoading","data","slice","map","coin","to","pathname","id","state","name","src","symbol","toLowerCase","Price","Chart","coinId","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","refetchInterval","type","series","price","close","options","mode","chart","height","width","toolbar","show","background","grid","stroke","curve","yaxis","xaxis","axisBorder","axisTicks","labels","categories","time_close","fill","gradient","gradientToColors","stops","colors","tooltip","y","formatter","value","toFixed","textColor","Overview","OverviewItem","Description","p","Tabs","Tab","isActive","useParams","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinTickers","tickersLoading","tickersData","loading","rank","quotes","USD","description","total_supply","max_supply","path","Router","GlobalStyle","createGlobalStyle","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.98b16e0f.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\n\nexport async function fetchCoins(){\n    return fetch(`${BASE_URL}/coins`).then((response) => response.json());\n}\n\nexport function fetchCoinInfo(coinId: string) {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinTickers(coinId: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\n        response.json()\n    );\n}\n\nexport function fetchCoinHistory(coinId: string) {\n  const endDate = Math.floor(Date.now() / 1000);\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2; \n  return fetch(`${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`).then((response) =>\n        response.json()\n    );\n}","import styled from 'styled-components';\nimport {Link} from 'react-router-dom';\nimport { useQuery } from 'react-query';\nimport { fetchCoins } from '../api';\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CoinsList = styled.ul``;\n\nconst Coin = styled.li`\n  background-color: white;\n  color: ${(props) => props.theme.bgColor};\n  border-radius: 15px;\n  margin-bottom: 10px;\n\n  a {\n    display: flex;\n    align-items: center;\n    padding: 20px;\n    transition: color 0.2s ease-in;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Img = styled.img`\n  width: 25px;\n  height:25px;\n  margin-right: 10px;\n`;\n\ninterface ICoin {\n    id: string,\n    name: string,\n    symbol: string,\n    rank: number,\n    is_new: boolean,\n    is_active: boolean,\n    type: string,\n}\n\nfunction Coins(){\n    const {isLoading, data} = useQuery<ICoin[]>(\"allCoins\",fetchCoins);\n    return (\n        <Container>\n          <Header>\n            <Title>코인</Title>\n          </Header>\n          {isLoading ? <Loader>Loading ...</Loader>\n            : (\n                <CoinsList>\n                    {data?.slice(0,100).map(coin => \n                        <Coin key={coin.id}>\n                            <Link\n                              to={{\n                                pathname: `/${coin.id}`,\n                                state: { name: coin.name },\n                              }}\n                            >\n                              <Img\n                                src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                              />\n                              {coin.name} &rarr;\n                              </Link>\n                        </Coin>\n                    )}\n                </CoinsList>\n            )}\n        </Container>\n      );\n}\nexport default Coins;","function Price() {\n    return <h1>Price</h1>;\n  }\n  \n  export default Price;","import { useQuery } from \"react-query\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\n\ninterface IHistorical {\n  \"time_open\": string,\n  \"time_close\": string,\n  \"open\": number,\n  \"high\": number,\n  \"low\": number,\n  \"close\": number,\n  \"volume\": number,\n  \"market_cap\": number\n}\ninterface ChartProps {\n  coinId: string;\n}\nfunction Chart({coinId}:ChartProps) {\n  const { isLoading, data } = useQuery<IHistorical[]>(\n    [\"ohlcv\", coinId],\n    () => fetchCoinHistory(coinId),\n    {\n      refetchInterval: 10000,\n    }\n  );\n    return (\n      <div>\n        {isLoading ? (\n          \"Loading chart...\"\n        ) : (\n          <ApexChart\n            type=\"line\"\n            series={[\n              {\n                name: \"Price\",\n                data: data?.map((price) => price.close),\n              },\n            ]}\n            options={{\n              theme: {\n                mode: \"dark\",\n              },\n              chart: {\n                height: 300,\n                width: 500,\n                toolbar: {\n                  show: false,\n                },\n                background: \"transparent\",\n              },\n              grid: { show: false },\n              stroke: {\n                curve: \"smooth\",\n                width: 4,\n              },\n              yaxis: {\n                show: false,\n              },\n              xaxis: {\n                axisBorder: { show: false },\n                axisTicks: { show: false },\n                labels: { show: false },\n                type: \"datetime\",\n                categories: data?.map((price) => price.time_close),\n              },\n              fill: {\n                type: \"gradient\",\n                gradient: { gradientToColors: [\"#0be881\"], stops: [0, 100] },\n              },\n              colors: [\"#0fbcf9\"],\n              tooltip: {\n                y: {\n                  formatter: (value) => `$${value.toFixed(2)}`,\n                },\n              },\n            }}\n          />\n        )}\n      </div>\n    );\n}\n  \nexport default Chart;","import styled from 'styled-components';\nimport { Link, Route, Switch, useLocation, useParams, useRouteMatch } from 'react-router-dom';\nimport Price from './Price';\nimport Chart from './Chart';\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\nimport { useQuery } from 'react-query';\n\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n  color:${(props) => props.theme.textColor}\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 7px 0px;\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    display: block;\n  }\n`;\n\n\ninterface RouteParams{\n    coinId: string;\n}\n\ninterface RouteState{\n    name: string;\n}\n\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\n\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\nfunction Coin(){\n  // const [loading, setLoading] = useState(true);\n  const { coinId } = useParams<RouteParams>();\n  const { state } = useLocation<RouteState>();\n  // const [info, setInfo] = useState<InfoData>();\n  // const [priceInfo, setPriceInfo] = useState<PriceData>();\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\n\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n    [\"info\", coinId],\n    () => fetchCoinInfo(coinId)\n  );\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n    [\"tickers\", coinId],\n    () => fetchCoinTickers(coinId),\n    {\n      refetchInterval: 5000,\n    }\n  );\n  const loading = infoLoading || tickersLoading;\n\n  return (\n    <Container>\n      <Header>\n      <Title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n      </Title>\n      </Header>\n      {loading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>${infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Price:</span>\n              <span>${tickersData?.quotes.USD.price.toFixed(3)}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{infoData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Suply:</span>\n              <span>{tickersData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/${coinId}/chart`}>Chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/${coinId}/price`}>Price</Link>\n            </Tab>\n          </Tabs>\n          <Switch>\n            <Route path={`/:coinId/price`}>\n              <Price />\n            </Route>\n            <Route path={`/:coinId/chart`}>\n              <Chart coinId={coinId}/>\n            </Route>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n}\nexport default Coin;","import {BrowserRouter,Route,Switch} from 'react-router-dom';\nimport Coins from './routes/Coins';\nimport Coin from './routes/Coin';\n\nfunction Router(){\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route path=\"/:coinId\">\n                    <Coin />\n                </Route>\n                <Route path=\"/\">\n                    <Coins />\n                </Route>\n            </Switch>\n        </BrowserRouter>\n    );\n}\nexport default Router;","import Router from './Router';\nimport { createGlobalStyle } from 'styled-components';\nimport { ReactQueryDevtools } from \"react-query/devtools\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor}\n  font-weight: 300;\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nfunction App(){\n  return (\n    <>\n      <GlobalStyle />\n      <Router />\n      <ReactQueryDevtools initialIsOpen={true} />\n    </>\n  );\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { ThemeProvider } from 'styled-components';\nimport App from './App';\nimport {theme} from './Theme'\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider theme={theme}>\n        <App/>\n      </ThemeProvider>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import {DefaultTheme} from \"styled-components\";\n\nexport const theme:DefaultTheme = {\n    textColor: \"#f5f6fa\",\n    bgColor: \"#2f3640\",\n    accentColor: \"#9c88ff\",\n}\n\n"],"sourceRoot":""}
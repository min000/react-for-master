{"version":3,"sources":["api.tsx","component/Loader.tsx","routes/Coins.tsx","routes/Price.tsx","routes/Chart.tsx","component/BackBtn.tsx","routes/Coin.tsx","Router.tsx","App.tsx","index.tsx","Theme.ts"],"names":["BASE_URL","fetchCoins","a","fetch","then","response","json","fetchExchange","Text","styled","span","Loader","Container","div","Header","header","CoinsList","ul","Coin","li","props","theme","bgColor","accentColor","Title","h1","Img","img","Coins","useQuery","isLoading","data","slice","map","coin","to","pathname","id","state","name","symbol","src","toLowerCase","Overview","OverviewItems","Item","Price","coinId","exchangeData","base_currency_id","quote_currency_name","quotes","USD","price","toFixed","quote_currency_id","Chart","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","refetchInterval","type","series","x","time_open","y","open","high","low","close","options","mode","chart","height","width","toolbar","show","background","yaxis","xaxis","axisBorder","axisTicks","labels","categories","time_close","plotOptions","candlestick","colors","upward","downward","Btn","h3","BackBtn","textColor","OverviewItem","Description","p","Tabs","Tab","isActive","useParams","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinTickers","tickersLoading","tickersData","loading","rank","description","total_supply","max_supply","path","Router","basename","process","GlobalStyle","createGlobalStyle","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.3efde248.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\n\nexport async function fetchCoins(){\n    return fetch(`${BASE_URL}/coins`).then((response) => response.json());\n}\n\nexport function fetchCoinInfo(coinId: string) {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinTickers(coinId: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\n        response.json()\n    );\n}\n\nexport function fetchCoinHistory(coinId: string) {\n  const endDate = Math.floor(Date.now() / 1000);\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2; \n  return fetch(`${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`).then((response) =>\n        response.json()\n    );\n}\n\nexport function fetchExchange() {\n  return fetch(`${BASE_URL}/exchanges/binance/markets`).then((response) =>\n        response.json()\n    );\n}","import styled from 'styled-components';\n\nconst Text = styled.span`\n  text-align: center;\n  display: block;\n  color: white;\n`;\n\nfunction Loader() {\n    return (\n      <Text>\n        Loading...\n      </Text>\n    );\n  }\n  \n  export default Loader;","import styled from 'styled-components';\nimport {Link} from 'react-router-dom';\nimport { useQuery } from 'react-query';\nimport { fetchCoins } from '../api';\nimport Loader from '../component/Loader';\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CoinsList = styled.ul``;\n\nconst Coin = styled.li`\n  background-color: white;\n  color: ${(props) => props.theme.bgColor};\n  border-radius: 15px;\n  margin-bottom: 10px;\n\n  a {\n    display: flex;\n    align-items: center;\n    padding: 20px;\n    transition: color 0.2s ease-in;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Img = styled.img`\n  width: 25px;\n  height:25px;\n  margin-right: 10px;\n`;\n\ninterface ICoin {\n    id: string,\n    name: string,\n    symbol: string,\n    rank: number,\n    is_new: boolean,\n    is_active: boolean,\n    type: string,\n}\n\nfunction Coins(){\n    const {isLoading, data} = useQuery<ICoin[]>(\"allCoins\",fetchCoins);\n    return (\n        <Container>\n          <Header>\n            <Title>코인</Title>\n          </Header>\n          {isLoading ? <Loader/>\n            : (\n                <CoinsList>\n                    {data?.slice(0,100).map(coin => \n                        <Coin key={coin.id}>\n                            <Link\n                              to={{\n                                pathname: `/${coin.id}`,\n                                state: { \n                                  name: coin.name, \n                                  symbol: coin.symbol \n                                },\n                              }}\n                            >\n                              <Img\n                                src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                              />\n                              {coin.name} &rarr;\n                              </Link>\n                        </Coin>\n                    )}\n                </CoinsList>\n            )}\n        </Container>\n      );\n}\nexport default Coins;","import { useQuery } from \"react-query\";\nimport styled from \"styled-components\";\nimport { fetchExchange } from \"../api\";\nimport Loader from '../component/Loader';\n\nconst Overview = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 20px 20px;\n  border-radius: 10px;\n`;\n\nconst OverviewItems = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding:10px;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\nconst Item = styled.li`\n  \n`;\n\ninterface ExchangeData {\n  \"pair\": string,\n  \"base_currency_id\": string,\n  \"base_currency_name\": string,\n  \"quote_currency_id\": string,\n  \"quote_currency_name\": string,\n  \"market_url\": string,\n  \"category\": string,\n  \"fee_type\": string,\n  \"outlier\": boolean,\n  \"reported_volume_24h_share\": number,\n  \"quotes\": {\n    \"USD\": {\n      \"price\": number,\n      \"volume_24h\": number\n    }\n  },\n  \"last_updated\": string\n}\ninterface PriceProps {\n  coinId:string\n}\n\nfunction Price({coinId}:PriceProps) {\n  const {isLoading: exchangeLoading, data: exchangeData} = useQuery<ExchangeData[]>(\"symbol\",fetchExchange);\n  return (\n    <Overview>\n      {exchangeData?.map(coin =>\n        coin.base_currency_id === coinId ? \n        (\n        <OverviewItems key={coin.quote_currency_id}>\n          <Item>{coin.quote_currency_name}</Item>\n          <Item>{coin?.quotes.USD.price.toFixed(3)}</Item>\n        </OverviewItems>\n        ):\n        null\n      )}\n    </Overview>\n  );\n}\n  \nexport default Price;","import { useQuery } from \"react-query\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\n\ninterface IHistorical {\n  \"time_open\": string,\n  \"time_close\": string,\n  \"open\": number,\n  \"high\": number,\n  \"low\": number,\n  \"close\": number,\n  \"volume\": number,\n  \"market_cap\": number\n}\ninterface ChartProps {\n  coinId: string;\n}\nfunction Chart({coinId}:ChartProps) {\n  const { isLoading, data } = useQuery<IHistorical[]>(\n    [\"ohlcv\", coinId],\n    () => fetchCoinHistory(coinId),\n    {\n      refetchInterval: 10000,\n    }\n  );\n    return (\n      <div>\n        {isLoading ? (\n          \"Loading chart...\"\n        ) : (\n          <ApexChart\n            type=\"candlestick\"\n            series={[\n              {\n                data: data?.map(price => {\n                  return {\n                    x: price.time_open,\n                    y: [\n                      price.open.toFixed(2),\n                      price.high.toFixed(2),\n                      price.low.toFixed(2),\n                      price.close.toFixed(2)\n                    ]\n                  };\n                })\n              }\n            ]}\n            // series={[\n            //   {\n            //     name: \"Price\",\n            //     data: data?.map((price) => price.close),\n            //   },\n            // ]}\n            options={{\n              theme: {\n                mode: \"dark\",\n              },\n              chart: {\n                height: 300,\n                width: 500,\n                toolbar: {\n                  show: false,\n                },\n                background: \"transparent\",\n              },\n            //   grid: { show: false },\n            //   stroke: {\n            //     curve: \"smooth\",\n            //     width: 4,\n            //   },\n              yaxis: {\n                show: false,\n              },\n              xaxis: {\n                axisBorder: { show: false },\n                axisTicks: { show: false },\n                labels: { show: false },\n                type: \"datetime\",\n                categories: data?.map((price) => price.time_close),\n              },\n              plotOptions: {\n                candlestick: {\n                  colors: {\n                    upward: '#0be881',\n                    downward: '#0fbcf9'\n                  }\n                }\n              }\n            //   fill: {\n            //     type: \"gradient\",\n            //     gradient: { gradientToColors: [\"#0be881\"], stops: [0, 100] },\n            //   },\n            //   colors: [\"#0fbcf9\"],\n            //   tooltip: {\n            //     y: {\n            //       formatter: (value) => `$${value.toFixed(2)}`,\n            //     },\n            //   },\n            }}\n          />\n        )}\n      </div>\n    );\n}\n  \nexport default Chart;","import styled from 'styled-components';\n\nconst Btn = styled.h3`\n  background: white;\n  position: absolute;\n  top: 25px;\n  border-radius: 10%;\n  padding: 10px 15px;\n`;\n\nfunction BackBtn() {\n    return (\n      <Btn>\n        🔙\n      </Btn>\n    );\n  }\n  \n  export default BackBtn;","import styled from 'styled-components';\nimport { Link, Route, Switch, useLocation, useParams, useRouteMatch } from 'react-router-dom';\nimport Price from './Price';\nimport Chart from './Chart';\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\nimport { useQuery } from 'react-query';\nimport BackBtn from '../component/BackBtn';\nimport Loader from '../component/Loader';\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n  color:${(props) => props.theme.textColor}\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 7px 0px;\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    display: block;\n  }\n`;\n\n\ninterface RouteParams{\n    coinId: string;\n}\n\ninterface RouteState{\n    name: string;\n    symbol : string;\n}\n\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\n\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\nfunction Coin(){\n  // const [loading, setLoading] = useState(true);\n  const { coinId } = useParams<RouteParams>();\n  const { state } = useLocation<RouteState>();\n  // const [info, setInfo] = useState<InfoData>();\n  // const [priceInfo, setPriceInfo] = useState<PriceData>();\n\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\n\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n    [\"info\", coinId],\n    () => fetchCoinInfo(coinId)\n  );\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n    [\"tickers\", coinId],\n    () => fetchCoinTickers(coinId),\n    {\n      refetchInterval: 5000,\n    }\n  );\n  const loading = infoLoading || tickersLoading;\n\n  return (\n    <Container>\n      <Header>\n      <Title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n      </Title>\n      </Header>\n      <Link to=\"/\">\n        <BackBtn />\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>${infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Price:</span>\n              <span>${tickersData?.quotes.USD.price.toFixed(3)}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{infoData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Suply:</span>\n              <span>{tickersData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/${coinId}/chart`}>Chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/${coinId}/price`}>Price</Link>\n            </Tab>\n          </Tabs>\n          <Switch>\n            <Route path={`/:coinId/price`}>\n              <Price coinId={coinId}/>\n            </Route>\n            <Route path={`/:coinId/chart`}>\n              <Chart coinId={coinId}/>\n            </Route>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n}\nexport default Coin;","import {BrowserRouter,Route,Switch} from 'react-router-dom';\nimport Coins from './routes/Coins';\nimport Coin from './routes/Coin';\n\nfunction Router(){\n    return (\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <Switch>\n                <Route path=\"/:coinId\">\n                    <Coin />\n                </Route>\n                <Route path=\"/\">\n                    <Coins />\n                </Route>\n            </Switch>\n        </BrowserRouter>\n    );\n}\nexport default Router;","import Router from './Router';\nimport { createGlobalStyle } from 'styled-components';\nimport { ReactQueryDevtools } from \"react-query/devtools\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  font-weight: 300;\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nfunction App(){\n  return (\n    <>\n      <GlobalStyle />\n      <Router />\n      <ReactQueryDevtools initialIsOpen={true} />\n    </>\n  );\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { ThemeProvider } from 'styled-components';\nimport App from './App';\nimport {theme} from './Theme'\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider theme={theme}>\n        <App/>\n      </ThemeProvider>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import {DefaultTheme} from \"styled-components\";\n\nexport const theme:DefaultTheme = {\n    textColor: \"#f5f6fa\",\n    bgColor: \"#2f3640\",\n    accentColor: \"#9c88ff\",\n}\n\n"],"sourceRoot":""}